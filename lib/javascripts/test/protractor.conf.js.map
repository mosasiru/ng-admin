{"version":3,"sources":["../../../src/javascripts/test/protractor.conf.js"],"names":["jsonServer","require","path","server","create","use","defaults","static","join","__dirname","logger","listen","beforeLaunch","global","onPrepare","browser","executeScript","afterLaunch","close","exports","config","sauceUser","process","env","SAUCE_USERNAME","sauceKey","SAUCE_ACCESS_KEY","specs","baseUrl","CI","maxSessions","multiCapabilities","browserName","build","TRAVIS_BUILD_NUMBER","TRAVIS_JOB_NUMBER","name","directConnect","jasmineNodeOpts","onComplete","isVerbose","showColors","includeStackTrace","defaultTimeoutInterval"],"mappings":";;AAAA;AACA,IAAIA,aAAaC,QAAQ,aAAR,CAAjB;AACA,IAAIC,OAAOD,QAAQ,MAAR,CAAX;;AAEA,IAAIE,SAAS,kBAAW;AACpB,QAAMA,SAASH,WAAWI,MAAX,EAAf;;AAEAD,WAAOE,GAAP,CAAWL,WAAWM,QAAX,CAAoB;AAC3BC,gBAAQL,KAAKM,IAAL,CAAUC,SAAV,EAAqB,yBAArB,CADmB;AAE3BC,gBAAQ;AAFmB,KAApB,CAAX;;AAKAP,WAAOQ,MAAP,CAAc,IAAd;;AAEA,WAAOR,MAAP;AACH,CAXD;;AAaA,IAAIS,eAAe,SAAfA,YAAe,GAAY;AAC3BC,WAAOV,MAAP,GAAgBA,QAAhB;AACH,CAFD;;AAIA,IAAIW,YAAY,SAAZA,SAAY,GAAY;AACxBC,YAAQC,aAAR,CAAsB,sCAAtB;AACH,CAFD;;AAIA,IAAIC,cAAc,SAAdA,WAAc,GAAY;AAC1B,QAAI,CAACJ,OAAOV,MAAR,IAAkB,CAACU,OAAOV,MAAP,CAAce,KAArC,EAA4C;AACxC;AACH;;AAEDL,WAAOV,MAAP,CAAce,KAAd;AACH,CAND;;AAQAC,QAAQC,MAAR,GAAkB;AACdC,eAAWC,QAAQC,GAAR,CAAYC,cADT;AAEdC,cAAUH,QAAQC,GAAR,CAAYG,gBAFR;;AAIdC,WAAO,CAAC,UAAD,CAJO;AAKdC,aAAS,aAAaN,QAAQC,GAAR,CAAYM,EAAZ,GAAiB,SAAjB,GAA6B,WAA1C,IAAyD,OALpD;AAMdC,iBAAa,CANC;AAOdC,uBAAmB,CACf;AACIC,qBAAa,QADjB;AAEIC,eAAOX,QAAQC,GAAR,CAAYW,mBAAZ,GAAkCZ,QAAQC,GAAR,CAAYW,mBAA9C,GAAoE,IAF/E;AAGI,6BAAqBZ,QAAQC,GAAR,CAAYY,iBAAZ,GAAgCb,QAAQC,GAAR,CAAYY,iBAA5C,GAAgE,IAHzF;AAIIC,cAAM;AAJV,KADe,CAPL;AAedC,mBAAe,CAACf,QAAQC,GAAR,CAAYM,EAfd;AAgBdS,qBAAiB;AACbC,oBAAY,IADC;AAEbC,mBAAW,IAFE;AAGbC,oBAAY,IAHC;AAIbC,2BAAmB,IAJN;AAKbC,gCAAwB;AALX,KAhBH;;AAwBd/B,kBAAcA,YAxBA;AAyBdE,eAAWA,SAzBG;AA0BdG,iBAAaA;AA1BC,CAAlB","file":"protractor.conf.js","sourcesContent":["/*global browser*/\nvar jsonServer = require('json-server');\nvar path = require('path');\n\nvar server = function() {\n    const server = jsonServer.create();\n\n    server.use(jsonServer.defaults({\n        static: path.join(__dirname, '/fixtures/examples/blog'),\n        logger: false\n    }));\n\n    server.listen(8001);\n\n    return server;\n}\n\nvar beforeLaunch = function () {\n    global.server = server();\n};\n\nvar onPrepare = function () {\n    browser.executeScript('window.name = \"NG_ENABLE_DEBUG_INFO\"');\n}\n\nvar afterLaunch = function () {\n    if (!global.server || !global.server.close) {\n        return;\n    }\n\n    global.server.close();\n};\n\nexports.config =  {\n    sauceUser: process.env.SAUCE_USERNAME,\n    sauceKey: process.env.SAUCE_ACCESS_KEY,\n\n    specs: ['e2e/*.js'],\n    baseUrl: 'http://' + (process.env.CI ? 'ngadmin' : 'localhost') + ':8001',\n    maxSessions: 1,\n    multiCapabilities: [\n        {\n            browserName: 'chrome',\n            build: process.env.TRAVIS_BUILD_NUMBER ? process.env.TRAVIS_BUILD_NUMBER : null,\n            'tunnel-identifier': process.env.TRAVIS_JOB_NUMBER ? process.env.TRAVIS_JOB_NUMBER : null,\n            name: 'ng-admin'\n        }\n    ],\n    directConnect: !process.env.CI,\n    jasmineNodeOpts: {\n        onComplete: null,\n        isVerbose: true,\n        showColors: true,\n        includeStackTrace: true,\n        defaultTimeoutInterval: 360000\n    },\n\n    beforeLaunch: beforeLaunch,\n    onPrepare: onPrepare,\n    afterLaunch: afterLaunch,\n};\n"]}