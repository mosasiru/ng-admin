{"version":3,"sources":["../../../../../src/javascripts/ng-admin/Crud/misc/RestWrapper.js"],"names":["RestWrapper","Restangular","setFullResponse","entityName","url","method","resource","oneUrl","operation","customOperation","rawEntity","get","then","response","data","params","allUrl","getList","customPOST","customPUT","customDELETE","$inject"],"mappings":";;;;;;;;;;IAAqBA,W;AACjB,yBAAYC,WAAZ,EAAyB;AAAA;;AACrB,aAAKA,WAAL,GAAmBA,WAAnB;;AAEAA,oBAAYC,eAAZ,CAA4B,IAA5B;AACH;;AAED;;;;;;;;;;;;;+BASOC,U,EAAYC,G,EAAKC,M,EAAQ;AAC5B,gBAAIC,WAAW,KAAKL,WAAL,CAAiBM,MAAjB,CAAwBJ,UAAxB,EAAoCC,GAApC,CAAf;AAAA,gBACII,YAAYH,SAASC,SAASG,eAAT,CAAyBJ,MAAzB,EAAiC,IAAjC,EAAuC,EAAvC,EAA2C,EAA3C,EAA+CK,SAA/C,CAAT,GAAqEJ,SAASK,GAAT,EADrF;;AAGA,mBAAOH,UAAUI,IAAV,CAAe,UAAUC,QAAV,EAAoB;AACtC,uBAAOA,SAASC,IAAhB;AACH,aAFM,CAAP;AAGH;;AAED;;;;;;;;;;;;;gCAUQC,M,EAAQZ,U,EAAYC,G,EAAKC,M,EAAQ;AACrC,gBAAIC,WAAW,KAAKL,WAAL,CAAiBe,MAAjB,CAAwBb,UAAxB,EAAoCC,GAApC,CAAf;AAAA,gBACII,YAAYH,SAASC,SAASG,eAAT,CAAyBJ,MAAzB,EAAiC,IAAjC,EAAuC,EAAvC,EAA2C,EAA3C,EAA+CU,MAA/C,CAAT,GAAkET,SAASW,OAAT,CAAiBF,MAAjB,CADlF;;AAGA,mBAAOP,SAAP;AACH;;;kCAESE,S,EAAWP,U,EAAYC,G,EAAKC,M,EAAQ;AAC1C,gBAAIC,WAAW,KAAKL,WAAL,CAAiBM,MAAjB,CAAwBJ,UAAxB,EAAoCC,GAApC,CAAf;AAAA,gBACII,YAAYH,SAASC,SAASG,eAAT,CAAyBJ,MAAzB,EAAiC,IAAjC,EAAuC,EAAvC,EAA2C,EAA3C,EAA+CK,SAA/C,CAAT,GAAqEJ,SAASY,UAAT,CAAoBR,SAApB,CADrF;;AAGA,mBAAOF,UAAUI,IAAV,CAAe,UAAUC,QAAV,EAAoB;AACtC,uBAAOA,SAASC,IAAhB;AACH,aAFM,CAAP;AAGH;;;kCAESJ,S,EAAWP,U,EAAYC,G,EAAKC,M,EAAQ;AAC1C,gBAAIC,WAAW,KAAKL,WAAL,CAAiBM,MAAjB,CAAwBJ,UAAxB,EAAoCC,GAApC,CAAf;AAAA,gBACII,YAAYH,SAASC,SAASG,eAAT,CAAyBJ,MAAzB,EAAiC,IAAjC,EAAuC,EAAvC,EAA2C,EAA3C,EAA+CK,SAA/C,CAAT,GAAqEJ,SAASa,SAAT,CAAmBT,SAAnB,CADrF;;AAGA,mBAAOF,UAAUI,IAAV,CAAe,UAAUC,QAAV,EAAoB;AACtC,uBAAOA,SAASC,IAAhB;AACH,aAFM,CAAP;AAGH;;;kCAESX,U,EAAYC,G,EAAK;AACvB,mBAAO,KAAKH,WAAL,CACNM,MADM,CACCJ,UADD,EACaC,GADb,EAEFgB,YAFE,EAAP;AAGH;;;;;;kBAhEgBpB,W;;;AAmErBA,YAAYqB,OAAZ,GAAsB,CAAC,aAAD,CAAtB","file":"RestWrapper.js","sourcesContent":["export default class RestWrapper {\n    constructor(Restangular) {\n        this.Restangular = Restangular;\n\n        Restangular.setFullResponse(true);\n    }\n\n    /**\n     * Returns the promise of one resource by URL\n     *\n     * @param {String} entityName\n     * @param {String} url\n     * @param {String} jethod\n     *\n     * @returns {promise}\n     */\n    getOne(entityName, url, method) {\n        var resource = this.Restangular.oneUrl(entityName, url),\n            operation = method ? resource.customOperation(method, null, {}, {}, rawEntity) : resource.get();\n\n        return operation.then(function (response) {\n            return response.data;\n        });\n    }\n\n    /**\n     * Returns the promise of a list of resources\n     *\n     * @param {Object} params\n     * @param {String} entityName\n     * @param {String} url\n     * @param {String} method\n     *\n     * @returns {promise}\n     */\n    getList(params, entityName, url, method) {\n        var resource = this.Restangular.allUrl(entityName, url),\n            operation = method ? resource.customOperation(method, null, {}, {}, params) : resource.getList(params);\n\n        return operation;\n    }\n\n    createOne(rawEntity, entityName, url, method) {\n        var resource = this.Restangular.oneUrl(entityName, url),\n            operation = method ? resource.customOperation(method, null, {}, {}, rawEntity) : resource.customPOST(rawEntity);\n\n        return operation.then(function (response) {\n            return response.data;\n        });\n    }\n\n    updateOne(rawEntity, entityName, url, method) {\n        var resource = this.Restangular.oneUrl(entityName, url),\n            operation = method ? resource.customOperation(method, null, {}, {}, rawEntity) : resource.customPUT(rawEntity);\n\n        return operation.then(function (response) {\n            return response.data;\n        });\n    }\n\n    deleteOne(entityName, url) {\n        return this.Restangular\n        .oneUrl(entityName, url)\n            .customDELETE();\n    }\n}\n\nRestWrapper.$inject = ['Restangular'];\n"]}