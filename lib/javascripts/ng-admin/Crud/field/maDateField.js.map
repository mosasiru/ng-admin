{"version":3,"sources":["../../../../../src/javascripts/ng-admin/Crud/field/maDateField.js"],"names":["maDateField","scope","restrict","link","element","field","name","rawValue","value","Date","$watch","parse","format","type","v","validation","isOpen","input","find","eq","attributes","attr","toggleDatePicker","$event","preventDefault","stopPropagation","template","$inject"],"mappings":";;;;;kBAKwBA,W;AALxB;;;;;AAKe,SAASA,WAAT,GAAuB;AAClC,WAAO;AACHC,eAAO;AACH,qBAAS,GADN;AAEH,qBAAS;AAFN,SADJ;AAKHC,kBAAU,GALP;AAMHC,cAAM,cAASF,KAAT,EAAgBG,OAAhB,EAAyB;AAC3B,gBAAIC,QAAQJ,MAAMI,KAAN,EAAZ;AACAJ,kBAAMK,IAAN,GAAaD,MAAMC,IAAN,EAAb;AACAL,kBAAMM,QAAN,GAAiBN,MAAMO,KAAN,IAAe,IAAf,GAAsB,IAAtB,GAA8BP,MAAMO,KAAN,YAAuBC,IAAvB,GAA8BR,MAAMO,KAApC,GAA4C,IAAIC,IAAJ,CAASR,MAAMO,KAAf,CAA3F;AACAP,kBAAMS,MAAN,CAAa,UAAb,EAAyB,UAASH,QAAT,EAAmB;AACxCN,sBAAMO,KAAN,GAAcH,MAAMM,KAAN,GAAcJ,QAAd,CAAd;AACH,aAFD;AAGAN,kBAAMW,MAAN,GAAeP,MAAMO,MAAN,EAAf;AACA,gBAAI,CAACX,MAAMW,MAAX,EAAmB;AACfX,sBAAMW,MAAN,GAAeP,MAAMQ,IAAN,OAAiB,MAAjB,GAA0B,YAA1B,GAAyC,qBAAxD;AACH;;AAEDZ,kBAAMa,CAAN,GAAUT,MAAMU,UAAN,EAAV;AACAd,kBAAMe,MAAN,GAAe,KAAf;AACA,gBAAIC,QAAQb,QAAQc,IAAR,CAAa,OAAb,EAAsBC,EAAtB,CAAyB,CAAzB,CAAZ;AACA,gBAAIC,aAAaf,MAAMe,UAAN,EAAjB;AACA,iBAAK,IAAId,IAAT,IAAiBc,UAAjB,EAA6B;AACzBH,sBAAMI,IAAN,CAAWf,IAAX,EAAiBc,WAAWd,IAAX,CAAjB;AACH;AACDL,kBAAMqB,gBAAN,GAAyB,UAAUC,MAAV,EAAkB;AACvCA,uBAAOC,cAAP;AACAD,uBAAOE,eAAP;AACAxB,sBAAMe,MAAN,GAAe,CAACf,MAAMe,MAAtB;AACH,aAJD;AAKH,SA9BE;AA+BHU;AA/BG,KAAP;AA4CH;;AAED1B,YAAY2B,OAAZ,GAAsB,EAAtB","file":"maDateField.js","sourcesContent":["/**\n * Edition field for a date - a text input with a datepicker.\n *\n * @example <ma-date-field field=\"field\" value=\"value\"></ma-date-field>\n */\nexport default function maDateField() {\n    return {\n        scope: {\n            'field': '&',\n            'value': '='\n        },\n        restrict: 'E',\n        link: function(scope, element) {\n            var field = scope.field();\n            scope.name = field.name();\n            scope.rawValue = scope.value == null ? null : (scope.value instanceof Date ? scope.value : new Date(scope.value));\n            scope.$watch('rawValue', function(rawValue) {\n                scope.value = field.parse()(rawValue);\n            });\n            scope.format = field.format();\n            if (!scope.format) {\n                scope.format = field.type() === 'date' ? 'yyyy-MM-dd' : 'yyyy-MM-dd HH:mm:ss';\n            }\n\n            scope.v = field.validation();\n            scope.isOpen = false;\n            var input = element.find('input').eq(0);\n            var attributes = field.attributes();\n            for (var name in attributes) {\n                input.attr(name, attributes[name]);\n            }\n            scope.toggleDatePicker = function ($event) {\n                $event.preventDefault();\n                $event.stopPropagation();\n                scope.isOpen = !scope.isOpen;\n            };\n        },\n        template:\n`<div class=\"input-group datepicker\">\n    <input\n        type=\"text\" ng-model=\"rawValue\" id=\"{{ name }}\" name=\"{{ name }}\" class=\"form-control\"\n        uib-datepicker-popup=\"{{ format }}\" is-open=\"isOpen\" ng-required=\"v.required\"\n        close-text=\"{{ 'CLOSE' | translate }}\" clear-text=\"{{ 'CLEAR' | translate }}\" current-text=\"{{ 'CURRENT' | translate }}\"/>\n    <span class=\"input-group-btn\">\n        <button type=\"button\" class=\"btn btn-default\" ng-click=\"toggleDatePicker($event)\">\n            <i class=\"glyphicon glyphicon-calendar\"></i>\n        </button>\n    </span>\n</div>`\n    };\n}\n\nmaDateField.$inject = [];\n"]}